mds.points$point_number <- as.factor(mds.points$point_number)
mds.points
envfit(mds, df.snps.sbs, permutations = 10000)
ggplot(mds.points, aes(MDS1, MDS2, col = Time.point.number))+
geom_point()+
theme_linedraw()
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()
df.snps.sbs <- df.snps.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
df.snps.sbs
df.snps.sbs[-c(2,4,7:8)]
df.snps.sbs <- df.snps.sbs[-c(2,4,7:8)]
mds <- metaMDS(df.snps.sbs)
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
mds <- metaMDS(df.snps.sbs)
mds <- metaMDS(df.snps.sbs)
mds <- metaMDS(df.snps.sbs)
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
envfit(mds, df.snps.sbs, permutations = 10000)
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()
df.genes.sbs
df.mech.23S <- df.group.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
df.group.ERM <- df.group.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
df.group.ERM
df.group.ERM <- df.group.sbs[which(!is.na(str_extract(colnames(df.group.sbs), "ERM")))]
df.group.ERM
df.group.ERM <- df.group.ERM[-c(2,4,7:8)]
df.group.ERM
df.group.ERM <- df.group.sbs[which(!is.na(str_extract(colnames(df.group.sbs), "ERM")))]
df.group.ERM
df.snps.sbs
df.group.ERM <- df.group.ERM[colnames(df.group.ERM) %in% colnames(df.snps.sbs),]
df.group.ERM
colnames(df.snps.sbs)
colnames(df.group.ERM)
colnames(df.group.ERM) %in% colnames(df.snps.sbs)
df.group.ERM <- df.group.ERM[colnames(df.group.ERM) %in% colnames(df.snps.sbs)]
df.group.ERM
df.group.ERM$ERM/df.snps.sbs$ERM
df.group.ERM$ERM*df.snps.sbs$ERM
df.group.ERM$ERM*df.snps.sbs$ERM/10000
colnames(df.group.ERM)
df.go <- NULL
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[i,]/df.snps.sbs[i,])/10000
df.go <- cbind(df.g, df.go)
}
df.g <- (df.group.ERM[i,]/df.snps.sbs[i,])/10000
df.g
df.g <- (df.group.ERM[i]/df.snps.sbs[i])/10000
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[i]/df.snps.sbs[i])/10000
df.go <- cbind(df.g, df.go)
}
df.group.ERM[i]
df.snps.sbs[,i]
df.group.ERM[,i]
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[,i]/df.snps.sbs[,i])/10000
df.go <- cbind(df.g, df.go)
}
df.go
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[,i]*df.snps.sbs[,i])/10000
df.go <- cbind(df.g, df.go)
}
df.go
colnames(df.go) <- colnames(df.group.ERM)
mds <- metaMDS(df.go)
df.go
as.data.frame(df.go)
df.go <- as.data.frame(df.go)
mds <- metaMDS(df.go)
df.go
mds <- metaMDS(df.go, distance = "bray")
str(df.go)
df.go
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[,i]*df.snps.sbs[,i])/100000
df.go <- cbind(df.g, df.go)
}
colnames(df.go) <- colnames(df.group.ERM)
df.go
df.go <- as.data.frame(df.go)
str(df.go)
mds <- metaMDS(df.go, distance = "bray")
mds
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
mds.points
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()+
prcomp(df.go, scale. = T)
warnings()
View(df.go)
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[,i]*df.snps.sbs[,i])
df.go <- cbind(df.g, df.go)
}
df.go
colnames(df.go) <- colnames(df.group.ERM)
df.go <- as.data.frame(df.go)
prcomp(df.go, scale. = T)
df.go
mds <- metaMDS(df.go, distance = "bray")
prcomp(df.go, scale. = T)
pca <- prcomp(df.go, scale. = T)
biplot(pca)
pca$x
pca$x[1]
as.data.frame(pca$x)
pca <- as.data.frame(pca$x)
pca
plot(pca[c(1,2)])
df.group.ERM
rownames(pca) <- rownames(df.group.ERM)
rownames(df.group.ERM)
rownames(pca)
pca <- prcomp(t(df.go), scale. = T)
t(df.go)
df.go
mds <- metaMDS(df.go, distance = "bray")
mds <- metaMDS(t(df.go), distance = "bray")
mds
mds.points <- as.data.frame(mds$points)
mds.points
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()+
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()
mds <- metaMDS(df.go/1000, distance = "bray")
mds <- metaMDS(df.go/10000000, distance = "bray")
df.group.ERM
mds <- metaMDS(df.group.ERM, distance = "bray")
df.group.ERM
mds <- metaMDS(df.group.sbs, distance = "bray")
df.group.ERM
df.group.ERM <- df.group.sbs[which(!is.na(str_extract(colnames(df.group.sbs), "ERM")))]
mds <- metaMDS(df.group.ERM, distance = "bray")
df.group.ERM
df.group.ERM <- df.group.sbs[which(!is.na(str_extract(colnames(df.group.sbs), "ERM")))]
# df.group.ERM <- df.group.ERM[colnames(df.group.ERM) %in% colnames(df.snps.sbs)]
library(tsne)
df.snps.sbs <- df.snps.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
# df.snps.sbs <- df.snps.sbs[-c(2,4,7:8)]
df.go <- NULL
for (i in 1:4){
df.g <- (df.group.ERM[,i]*df.snps.sbs[,i])
df.go <- cbind(df.g, df.go)
}
df.go
as.data.frame(df.go)
df.go <- as.data.frame(df.go)
mds <- metaMDS(df.go, distance = "bray")
mds <- metaMDS(df.godf.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()+
stat_ellipse()
df.snps.sbs <- df.snps.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
df.snps.sbs
df.snps <- read.csv("data/megares/SNPs.csv")
df.snps <- spread(df.snps, sampleID, count, fill = 0)
df.snps <- df.snps[-c(1,2)]
rownames(df.snps) <- df.snps$group
df.snps <- df.snps[-1]
df.snps <- df.snps[which(!is.na(str_extract(colnames(df.snps), "HP"))),]
colnames(df.snps) <- sapply(str_split(colnames(df.snps), "_"), function(x) tail(x, 1))
df.snps.sbs <- df.snps[colnames(df.snps) %in% c(Point_1, Point_2)]
df.snps.sbs <- df.snps.sbs[colnames(df.snps.sbs) != "55HP.1"]
df.snps.sbs <- as.data.frame(t(df.snps.sbs))
df.snps.sbs <- df.snps.sbs[which(!is.na(str_extract(colnames(df.snps.sbs), "ERM")))]
df.snps.sbs
df.go <- as.data.frame(df.go)
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
mds <- metaMDS(df.snps.sbs, distance = "bray")
mds.points <- as.data.frame(mds$points)
mds.points <- merge(meta.sbs[c(1,2,11)], cbind(rownames(mds.points), mds.points), by = 1)
mds.points$point_number <- as.factor(mds.points$point_number)
ggplot(mds.points, aes(MDS1, MDS2, col = point_number))+
geom_point()+
theme_linedraw()+
stat_ellipse()
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMG)
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
cor.test(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
cor.test(df.snps.sbs$ERMB, df.snps.sbs$ERMF, method = "spearman")
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
plot(log(df.snps.sbs$ERMB), df.snps.sbs$ERMF)
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMF))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERM))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMB))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMF))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMC))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMA))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMO))
plot(log(df.snps.sbs$ERMB), log(df.snps.sbs$ERMF))
plot(df.snps.sbs$ERMB, df.snps.sbs$ERMF)
wilcox.test(df.snps.sbs$ERMB[rownames(df.snps.sbs) %in% Point_1], df.snps.sbs$ERMB[rownames(df.snps.sbs) %in% Point_2], paired = T, alternative = "less")
wilcox.test(df.snps.sbs$ERM[rownames(df.snps.sbs) %in% Point_1], df.snps.sbs$ERM[rownames(df.snps.sbs) %in% Point_2], paired = T, alternative = "less")
wilcox.test(df.snps.sbs$ERMB[rownames(df.snps.sbs) %in% Point_1], df.snps.sbs$ERMB[rownames(df.snps.sbs) %in% Point_2], paired = T, alternative = "less")
all.changes
df.org
workDir <- "/home/acari/Рабочий стол/HP_project/"
setwd(workDir)
# Import libraries and functions ##
source("src/functions.R")
source("src/functions_2.R")
source("src/functions_3.R")
set.seed(10)
# Set color pallete ##
my_palette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))(200)
meta.data <- read.csv("data/meta.case.txt")
samples <- as.character(meta.data$patient_id[meta.data$point_number %in% c(1,2)])
samples <- samples[which(duplicated(samples))]
meta.sbs <- meta.data[meta.data$patient_id %in% samples & meta.data$point_number %in% c(1,2),]
names.list <- meta.sbs$sample_ID
meta.sbs <- meta.sbs[meta.sbs$sample_ID %in% names.list,]
meta.sbs$patient_id <- as.character(meta.sbs$patient_id)
Point_1 <- as.character(meta.sbs$sample_ID[meta.sbs$point_number == 1])
Point_2 <- as.character(meta.sbs$sample_ID[meta.sbs$point_number == 2])
meta.data.sbs <- meta.data[meta.data$Sample_ID %in% c(Point_1, Point_2),]
metafast.output <- read.table("data/metafast/HP.metafast.txt", row.names = 1)
df.org <- read.csv("data/case.org.mpa", row.names = 1)
df.gen <- read.csv("data/case.gen.mpa", row.names = 1)
df.family <- read.table("data/case.family.mpa")
df.phyla <- read.table("data/case.phyla.mpa")
df.phyla <- df.phyla[rownames(df.phyla) %in% meta.data$sample_ID,]
# Import control data ##
control.family <- read.table("data/rus.control.family.mpa")
healthy.org <- read.table("data/healthy.org.txt")
healthy.fam <- read.table("data/healthy.fam.txt")
metafast.healthy <- read.table("data/metafast/healthy.metafast.txt", row.names = 1)
spec_num <- specnumber(df.org)
shannon.i <- diversity(df.org, index = "shannon")
simpson.i <- diversity(df.org, index = "simpson")
# Make data.frame
alpha.div <- data.frame(spec_num = spec_num,
shannon = shannon.i,
simpson = simpson.i)
alpha.div <- merge(cbind(rownames(alpha.div), alpha.div), meta.data[c(1,11)], by = 1)
alpha.div$point_number <- as.factor(alpha.div$point_number)
colnames(alpha.div)[1] <- "sampleID"
# Wilcoxon signed-rank paired test ##
index.names <- colnames(alpha.div[-c(1,5)])
alpha.div.sbs <- alpha.div[as.character(alpha.div$sampleID) %in% c(Point_1, Point_2),]
alpha.p <- NULL
for (k in index.names){
df.l <- alpha.div.sbs[c("point_number", k)]
first.point <- df.l[df.l$point_number == 1,]
second.point <- df.l[df.l$point_number == 2,]
w.alpha.div <- wilcox.test(first.point[,2],
second.point[,2], paired = T,
alternative = "greater")
StDev.f <- sd(first.point[,2])
StDev.s <- sd(second.point[,2])
alpha.p <- rbind(alpha.p, data.frame(index = k,
mean.1 = mean(first.point[,2]),
mean.2 = mean(second.point[,2]),
SD.1 = sd(first.point[,2]),
SD.2 = sd(second.point[,2]),
p.val = w.alpha.div$p.value))
}
write.table(alpha.p, 'output/alpha.diff.txt', quote=F, sep='\t', row.names = F)
alpha.div.sbs <- merge(meta.data[c(1,2)], alpha.div.sbs, by = 1)
alpha.div.sbs <- alpha.div.sbs[order(alpha.div.sbs$patient_id),]
alpha.div.sbs
alpha.div.sbs
spec_num.changes <- abs(alpha.div.sbs$spec_num[alpha.div.sbs$point_number == 1] - alpha.div.sbs$spec_num[alpha.div.sbs$point_number == 2])
shannon.changes <- abs(alpha.div.sbs$shannon[alpha.div.sbs$point_number == 1] - alpha.div.sbs$shannon[alpha.div.sbs$point_number == 2])
simpson.changes <- abs(alpha.div.sbs$simpson[alpha.div.sbs$point_number == 1] - alpha.div.sbs$simpson[alpha.div.sbs$point_number == 2])
super_plot <- function(x){
plot(x)
abline(h = mean(x, color = "red", lty = 5))
abline(h = mean(x) - sd(x))
abline(h = mean(x) + sd(x))
}
df.fam.sbs <- df.org[rownames(df.org) %in% c(Point_1, Point_2),]
df.fam.sbs <- cbind(rownames(df.fam.sbs), df.fam.sbs)
colnames(df.fam.sbs)[1] <- "sampleID"
df.fam.sbs <- merge(meta.data[c(1,2)], df.fam.sbs, by = 1)
df.fam.sbs <- df.fam.sbs[order(df.fam.sbs$patient_id),]
patID <- as.character(unique(df.fam.sbs$patient_id))
bray.dist <- NULL
for (i in patID){
di <- metaMDSdist(df.fam.sbs[df.fam.sbs$patient_id == i,][-c(1:2)], distance = "bray")
bray.dist <- rbind(data.frame(patientID = i, bray_dist = as.vector(di)), bray.dist)
}
jaccard.dist <- NULL
for (i in patID){
di <- metaMDSdist(df.fam.sbs[df.fam.sbs$patient_id == i,][-c(1:2)], distance = "jaccard")
jaccard.dist <- rbind(data.frame(patientID = i, jaccard_dist = as.vector(di)), jaccard.dist)
}
euclid.dist <- NULL
for (i in patID){
di <- metaMDSdist(df.fam.sbs[df.fam.sbs$patient_id == i,][-c(1:2)], distance = "euclidean")
euclid.dist <- rbind(data.frame(patientID = i, euclid_dist = as.vector(di)), euclid.dist)
}
df.dist <- join_all(list(bray.dist, jaccard.dist, euclid.dist), by = 1, type = 'full')
alpha.changes <- data.frame(patientID = unique(alpha.div.sbs$patient_id), spec_num.changes, shannon.changes, simpson.changes)
df.changes <- merge(alpha.changes, df.dist, by = 1)
write.table(df.changes, 'output/ch.2p.txt', quote=F, sep='\t', row.names = F)
# Healthy
healthy.org <- healthy.org[,which(apply(healthy.org, 2, max) > 1)]
healthy.patientID <- sapply(str_split(rownames(healthy.org), "-"), function(x) head(x, 1))
healthy.time_points <- as.numeric(sapply(str_split(rownames(healthy.org), "-"), function(x) x[3]))
meta.healthy <- data.frame(patientID = healthy.patientID, time_points = healthy.time_points)
healthy.spec_num <- specnumber(healthy.org)
healthy.shannon <- diversity(healthy.org, index = "shannon")
healthy.simpson <- diversity(healthy.org, index = "simpson")
alpha.div.healthy <- data.frame(spec_num = healthy.spec_num,
shannon = healthy.shannon,
simpson = healthy.simpson)
alpha.div.healthy <- cbind(rownames(alpha.div.healthy), alpha.div.healthy)
colnames(alpha.div.healthy)[1] <- "sampleID"
rownames(alpha.div.healthy) <- 1:20
alpha.div.healthy <- cbind(alpha.div.healthy, meta.healthy)[c(1,5,2,3,4,6)]
# 7 days
healthy.spec_num.c <- abs(alpha.div.healthy$spec_num[alpha.div.healthy$time_points == 0] - alpha.div.healthy$spec_num[alpha.div.healthy$time_points == 7])
healthy.shannon.c <- abs(alpha.div.healthy$shannon[alpha.div.healthy$time_points == 0] - alpha.div.healthy$shannon[alpha.div.healthy$time_points == 7])
healthy.simpson.c <- abs(alpha.div.healthy$simpson[alpha.div.healthy$time_points == 0] - alpha.div.healthy$simpson[alpha.div.healthy$time_points == 7])
# 60 days
alpha.div.healthy60 <- alpha.div.healthy[alpha.div.healthy$patientID != "halbarad",]
healthy.spec_num.c2 <- abs(alpha.div.healthy60$spec_num[alpha.div.healthy60$time_points == 0] - alpha.div.healthy60$spec_num[alpha.div.healthy60$time_points == 60])
healthy.shannon.c2 <- abs(alpha.div.healthy60$shannon[alpha.div.healthy60$time_points == 0] - alpha.div.healthy60$shannon[alpha.div.healthy60$time_points == 60])
healthy.simpson.c2 <- abs(alpha.div.healthy60$simpson[alpha.div.healthy60$time_points == 0] - alpha.div.healthy60$simpson[alpha.div.healthy60$time_points == 60])
## Beta-diversity
heal.org.meta <- cbind(meta.healthy, healthy.org)
# 7 days
heal.org.meta.7 <- heal.org.meta[heal.org.meta$time_points %in% c(0,7),]
patID.7 <- as.character(unique(heal.org.meta.7$patientID))
bray.dist.7 <- NULL
for (i in patID.7){
di <- metaMDSdist(heal.org.meta.7[heal.org.meta.7$patientID == i,][-c(1:2)], distance = "bray")
bray.dist.7 <- rbind(data.frame(patientID = i, bray_dist = as.vector(di)), bray.dist.7)
}
jaccard.dist.7 <- NULL
for (i in patID.7){
di <- metaMDSdist(heal.org.meta.7[heal.org.meta.7$patientID == i,][-c(1:2)], distance = "jaccard")
jaccard.dist.7 <- rbind(data.frame(patientID = i, jaccard_dist = as.vector(di)), jaccard.dist.7)
}
euclid.dist.7 <- NULL
for (i in patID.7){
di <- metaMDSdist(heal.org.meta.7[heal.org.meta.7$patientID == i,][-c(1:2)], distance = "euclidean")
euclid.dist.7 <- rbind(data.frame(patientID = i, euclid_dist  = as.vector(di)), euclid.dist.7)
}
healthy.dist.7 <- join_all(list(bray.dist.7, jaccard.dist.7, euclid.dist.7), by = 1, type = 'full')
alpha.changes.7 <- data.frame(patientID = unique(meta.healthy$patientID),
healthy.spec_num.c, healthy.shannon.c, healthy.simpson.c)
healthy.changes.7 <- merge(alpha.changes.7, healthy.dist.7, by = 1)
colnames(healthy.changes.7) <- colnames(df.changes)
# 60 days
heal.org.meta.60 <- heal.org.meta[heal.org.meta$time_points %in% c(0,60),]
heal.org.meta.60 <- heal.org.meta.60[heal.org.meta.60$patientID != "halbarad",]
patID.60 <- as.character(unique(heal.org.meta.60$patientID))
bray.dist.60 <- NULL
for (i in patID.60){
di <- metaMDSdist(heal.org.meta.60[heal.org.meta.60$patientID == i,][-c(1:2)], distance = "bray")
bray.dist.60 <- rbind(data.frame(patientID = i, bray_dist = as.vector(di)), bray.dist.60)
}
jaccard.dist.60 <- NULL
for (i in patID.60){
di <- metaMDSdist(heal.org.meta.60[heal.org.meta.60$patientID == i,][-c(1:2)], distance = "jaccard")
jaccard.dist.60 <- rbind(data.frame(patientID = i, jaccard_dist = as.vector(di)), jaccard.dist.60)
}
euclid.dist.60 <- NULL
for (i in patID.60){
di <- metaMDSdist(heal.org.meta.60[heal.org.meta.60$patientID == i,][-c(1:2)], distance = "euclidean")
euclid.dist.60 <- rbind(data.frame(patientID = i, euclid_dist = as.vector(di)), euclid.dist.60)
}
healthy.dist.60 <- join_all(list(bray.dist.60, jaccard.dist.60, euclid.dist.60), by = 1, type = 'full')
alpha.changes.60 <- data.frame(patientID = unique(meta.healthy$patientID)[-4],
healthy.spec_num.c2, healthy.shannon.c2, healthy.simpson.c2)
healthy.changes.60 <- merge(alpha.changes.60, healthy.dist.60, by = 1)
colnames(healthy.changes.60) <- colnames(df.changes)
write.table(healthy.changes.7, 'output/ch.healthy.7.txt', quote=F, sep='\t', row.names = F)
write.table(healthy.changes.60, 'output/ch.healthy.60.txt', quote=F, sep='\t', row.names = F)
# Merge tables ##
df.changes$disease <- "HP"
healthy.changes.7$disease <- "healthy"
healthy.changes.60$disease <- "healthy"
df.changes$time_point <- 14
healthy.changes.7$time_point <- 7
healthy.changes.60$time_point <- 60
all.changes <- rbind(df.changes, healthy.changes.7, healthy.changes.60)
all.changes
all.changes[all.changes$disease == "HP",]
all.changes$bray_dist[all.changes$disease == "HP"]
all.changes$disease
cor(all.changes$bray_dist[all.changes$disease == "HP"], all.changes$bray_dist[all.changes$disease == "healthy"])
wilcox.test(all.changes$bray_dist[all.changes$disease == "HP"], all.changes$bray_dist[all.changes$disease == "healthy"])
wilcox.test(all.changes$bray_dist[all.changes$disease == "HP"], all.changes$bray_dist[all.changes$disease == "healthy"], alternative = "greater")
all.changes$bray_dist[all.changes$disease == "healthy"]
all.changes$bray_dist[all.changes$disease == "HP"]
boxplot(all.changes$bray_dist[all.changes$disease == "HP"], all.changes$bray_dist[all.changes$disease == "healthy"])
workDir <- "/home/acari/Рабочий стол/HP_project/"
setwd(workDir)
# Import libraries and functions ##
source("src/functions.R")
set.seed(10)
# Set color pallete ##
my_palette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))(200)
erectale <- read.table("data/panphlan/panphlan_fprausnitzii16_result.csv")
erectale <- as.data.frame(t(erectale))
pca <- prcomp(erectale, center = T)
mds.erectale16 <- metaMDS(erectale, distance = "bray")
# mds.erectale16.p <- as.data.frame(mds.erectale16$points)
mds.erectale16.p <- as.data.frame(pca$x[,c(1,2)])
mds.erectale16.p <- cbind(rownames(mds.erectale16.p), mds.erectale16.p)
colnames(mds.erectale16.p)[1] <- "sampleID"
rownames(mds.erectale16.p) <- 1:nrow(mds.erectale16.p)
mds.erectale16.hp <- mds.erectale16.p[which(!is.na(str_extract(mds.erectale16.p$sampleID, "HP"))),]
mds.erectale16.hp$sampleID <- sapply(str_split(mds.erectale16.hp$sampleID, "_"), function(x) x[length(x)-1])
mds.erectale16.hp <- merge(meta.data.sbs[c(1,2,10)], mds.erectale16.hp, by = 1)
mds.erectale16.hp$group <- "HP"
mds.erectale16.hp$days[mds.erectale16.hp$Time.point.number == 1] <- 0
mds.erectale16.hp$days[mds.erectale16.hp$Time.point.number == 2] <- 14
mds.erectale16.h <- mds.erectale16.p[which(is.na(str_extract(mds.erectale16.p$sampleID, "HP"))),]
mds.erectale16.h$patientID <- sapply(str_split(mds.erectale16.h$sampleID, "\\."), function(x) head(x, 1))
mds.erectale16.h$group <- "healthy"
mds.erectale16.h$days <- sapply(str_split(mds.erectale16.h$sampleID, "\\."), function(x) x[length(x)-1])
mds.erectale16.hp <- mds.erectale16.hp[-3]
colnames(mds.erectale16.hp) <- colnames(mds.erectale16.h[c(1,4,2,3,5,6)])
mds.erectale16.p <- rbind(mds.erectale16.h[c(1,4,2,3,5,6)], mds.erectale16.hp)
mds.erectale16.p$days <- as.numeric(mds.erectale16.p$days)
mds.erectale16.p <- mds.erectale16.p[order(mds.erectale16.p$days),]
mds.erectale16.p$days <- as.factor(mds.erectale16.p$days)
erectale <- read.table("data/panphlan/panphlan_fprausnitzii16_result.csv")
erectale <- as.data.frame(t(erectale))
pca <- prcomp(erectale, center = T)
mds.erectale16 <- metaMDS(erectale, distance = "bray")
mds.erectale16.p <- as.data.frame(pca$x[,c(1,2)])
mds.erectale16.p <- cbind(rownames(mds.erectale16.p), mds.erectale16.p)
colnames(mds.erectale16.p)[1] <- "sampleID"
rownames(mds.erectale16.p) <- 1:nrow(mds.erectale16.p)
mds.erectale16.p
mds.erectale16.hp <- mds.erectale16.p[which(!is.na(str_extract(mds.erectale16.p$sampleID, "HP"))),]
mds.erectale16.hp$sampleID <- sapply(str_split(mds.erectale16.hp$sampleID, "_"), function(x) x[length(x)-1])
mds.erectale16.hp <- merge(meta.data.sbs[c(1,2,10)], mds.erectale16.hp, by = 1)
mds.erectale16.hp$group <- "HP"
mds.erectale16.hp$days[mds.erectale16.hp$Time.point.number == 1] <- 0
mds.erectale16.hp$days[mds.erectale16.hp$Time.point.number == 2] <- 14
mds.erectale16.p
mds.erectale16.hp <- mds.erectale16.p[which(!is.na(str_extract(mds.erectale16.p$sampleID, "HP"))),]
mds.erectale16.hp
mds.erectale16.hp$sampleID <- sapply(str_split(mds.erectale16.hp$sampleID, "_"), function(x) x[length(x)-1])
mds.erectale16.hp <- merge(meta.data.sbs[c(1,2,10)], mds.erectale16.hp, by = 1)
meta.data.sbs
meta.data <- read.csv("data/meta_case.csv")
# Extract first and second time points sampleID
samples <- as.character(meta.data$patient_id[meta.data$point_number %in% c(1,2)])
samples <- samples[which(duplicated(samples))]
meta.sbs <- meta.data[meta.data$patient_id %in% samples & meta.data$point_number %in% c(1,2),]
names.list <- meta.sbs$sample_ID
meta.sbs <- meta.sbs[meta.sbs$sample_ID %in% names.list,]
meta.sbs$patient_id <- as.character(meta.sbs$patient_id)
install.packages("illuminaio")
install.packages("illuminaio")
source('http://bioconductor.org/biocLite.R')
biocLite('illuminaio')
library('illuminaio')
library('illuminaio')
library('illuminaio')
warnings()
